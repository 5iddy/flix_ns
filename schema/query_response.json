{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryResponse",
  "description": "Various Query Responses",
  "oneOf": [
    {
      "description": "Response for when [`QueryMsg::ResolveRecord`] ```json { \"name_record\":{ \"name\": \"alice\", \"address\": \"juno12......239qw\" } } ```",
      "type": "object",
      "required": [
        "name_record"
      ],
      "properties": {
        "name_record": {
          "type": "object",
          "required": [
            "address",
            "name"
          ],
          "properties": {
            "address": {
              "description": "and the address that the record belongs",
              "type": "string"
            },
            "name": {
              "description": "name",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Response for when [QueryMsg::Balance] is invoked ```json { \"balance\": { \"name\": \"alice\", \"amount\": [ { \"amount\": \"1000\", \"denom\": \"token\" }, ] } } ```",
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "object",
          "required": [
            "amount",
            "name"
          ],
          "properties": {
            "amount": {
              "description": "the balance in various denominations",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Coin"
              }
            },
            "name": {
              "description": "name, whose owners balance is requested",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Response for when [QueryMsg::GetSaleFlag] is requested ```json { \"sale_flag\": { \"flag\": true } } ```",
      "type": "object",
      "required": [
        "sale_flag"
      ],
      "properties": {
        "sale_flag": {
          "type": "object",
          "required": [
            "flag"
          ],
          "properties": {
            "flag": {
              "description": "current value of the flag",
              "type": "boolean"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
